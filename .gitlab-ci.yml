image: docker:latest
services:
- docker:dind

variables:
  SERVER_TEST_IMAGE: registry.gitlab.com/kanehara/spotimix/server:$CI_BUILD_REF_NAME
  SERVER_RELEASE_IMAGE: registry.gitlab.com/kanehara/spotimix/server:latest
  SERVER_HEROKU_IMAGE: registry.heroku.com/spotimix-server/web
  CLIENT_TEST_IMAGE: registry.gitlab.com/kanehara/spotimix/client:$CI_BUILD_REF_NAME
  CLIENT_RELEASE_IMAGE: registry.gitlab.com/kanehara/spotimix/client:latest
  CLIENT_HEROKU_IMAGE: registry.heroku.com/spotimix-client/web

stages:
  - build
  - test
  - release
  - deploy

before_script:
  - docker info
  - docker login -u $GITLAB_USER -p $CI_TOKEN registry.gitlab.com

build-server:
  stage: build
  script:
    - docker build --pull --build-arg GITLAB_USER=$GITLAB_USER --build-arg CI_TOKEN=$CI_TOKEN -t $SERVER_TEST_IMAGE ./server
    - docker push $SERVER_TEST_IMAGE

build-client:
  stage: build
  script:
    - docker build --pull --build-arg API_HOST=https://spotimix-server.herokuapp.com -t $CLIENT_TEST_IMAGE ./client
    - docker push $CLIENT_TEST_IMAGE

test-server:
  stage: test
  script:
    - docker pull $SERVER_TEST_IMAGE
    - docker run $SERVER_TEST_IMAGE yarn test

test-client:
  stage: test
  script:
    - docker pull $CLIENT_TEST_IMAGE
    - docker run $CLIENT_TEST_IMAGE yarn test

release-server:
  stage: release
  script:
    - docker pull $SERVER_TEST_IMAGE
    - docker tag $SERVER_TEST_IMAGE $SERVER_RELEASE_IMAGE
    - docker push $SERVER_RELEASE_IMAGE
  only:
    - master

release-client:
  stage: release
  script:
    - docker pull $CLIENT_TEST_IMAGE
    - docker tag $CLIENT_TEST_IMAGE $CLIENT_RELEASE_IMAGE
    - docker push $CLIENT_RELEASE_IMAGE
  only:
    - master

deploy-server:
  stage: deploy
  when: manual
  only:
    - master
  environment:
    name: production
  script:
    - apk update
    - apk add --no-cache curl
    - apk add --no-cache bash
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    - yarn global add heroku-cli
    - docker pull $CLIENT_RELEASE_IMAGE
    - docker tag $CLIENT_RELEASE_IMAGE $CLIENT_HEROKU_IMAGE
    - heroku login -u $HEROKU_USER -p $HEROKU_PASS
    - heroku container:login
    - docker push $CLIENT_HEROKU_IMAGE

deploy-client:
  stage: deploy
  when: manual
  only:
    - master
  environment:
    name: production
  script:
    - apk update
    - apk add --no-cache curl
    - apk add --no-cache bash
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    - yarn global add heroku-cli
    - docker pull $SERVER_RELEASE_IMAGE
    - docker tag $SERVER_RELEASE_IMAGE $SERVER_HEROKU_IMAGE
    - heroku login -u $HEROKU_USER -p $HEROKU_PASS
    - heroku container:login
    - docker push $SERVER_HEROKU_IMAGE